#!/bin/bash

do_stress=true
stress_time=10

prompt=$0
executable=test_sort
cycles="cycles:u"
cpus=8

funcb_probe=$(sudo perf probe --force --exec $executable 'funcB' 2>&1 | tr -d '\n' | awk '{print $4}')
echo "$0! created $funcb_probe tracepoint"
funcb_ret_probe=$(sudo perf probe --force --exec $executable 'funcB%return' 2>&1 | tr -d '\n' | awk '{print $4}')
echo "$0! created $funcb_ret_probe tracepoint"

if [[ $do_stress == true ]]; then
	echo "$0! Running cpu stress in background for $stress_time s"
	sudo stress --cpu $cpus --timeout $stress_time --quiet &
fi

echo "$0# perf record output start"
sudo perf record --event $funcb_probe --event "{$funcb_ret_probe,$cycles}:S" ./$executable
#sudo perf record --event "{$funcb_probe,$cycles}:S" --event "{$funcb_ret_probe,$cycles}:S" ./$executable
echo "$0# perf record output end"

filename="perf_test"
if [[ -e $filename ]]; then
	echo "$0! old $filename was deleted"
	rm $filename
fi

echo "$0! dumping Perf data to file"
sudo perf script --ns --deltatime > $filename
echo "$0# file $filename created"

$(source ../venv/bin/activate)
echo "$0# ./pps.py output start"
./pps.py --ignore="$funcb_probe" --tracepoints="$funcb_ret_probe $cycles" --file $filename
echo "$0# ./pps.py output end"

sudo perf probe --del $funcb_probe --quiet
echo "$0! deleted $funcb_probe tracepoint"
sudo perf probe --del $funcb_ret_probe --quiet
echo "$0! deleted $funcb_ret_probe tracepoint"
