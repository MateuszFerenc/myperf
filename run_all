#!/bin/bash

print_help() {
	echo -e "Use: sudo ./run_all <system> [OPTIONS]\n"
	echo -e "<system> : Obligatory.\n\t-s, --system (true|false) - You need to pass [true] if run is in decreased system stats, or [false] if normal run."
	echo -e "<quiet> : Optional, default not quiet.\n\t-q, --quiet - If specified, output from each test will be not displayed."
	echo -e "<comment> : Optional, default no comment.\n\t-c, --comment (text) - If specified, file \"comment.txt\" will be created with comment for this run."
	echo -e "<cpu> : Optional, default permit context switching.\n\t-f, --force-single-core - If specified, forces tests to run on single core only to prevent form context switching."
}

if [[ ! -e /usr/bin/perf ]]; then
	echo -e "Perf tool not installed...\nInstall using sudo apt install linux-tools-`uname -r`"
fi

if [[ "$#" -eq  "0" ]]; then 
	print_help
	exit
fi

system=0
quiet=false
comment=false
single_core=false
all_args="$@"

while [[ "$#" -gt 0 ]]; do
    case $1 in
    	-h|--help) 
    		print_help
    		exit
    		;;
        -s|--system)
        	if $2 ; then
				system="decreased_system_run"
			else
				system="normal_run"
			fi
        	shift
        	shift
        	;;
        -q|--quiet) 
        	quiet=true
        	shift
        	;;
        -c|--comment) 
        	comment=true
        	comment_data="./run_all $all_args\n\ncomment: $2"
        	shift
        	shift
        	;;
        -f|--force-single-core)
        	single_core=true
        	shift
        	;;
        *) 
        	echo "Unknown parameter: $1"
        	print_help
        	exit
        	;;
    esac
done

if [[ "$EUID" -ne 0 ]]; then 
	echo "Please run as root [sudo]"
	exit
fi

if [[ $system = 0 ]]; then
	echo -e "-s, --system not specified\nAborting..."
	print_help
	exit
fi

now_date=$(date +%H%M%S_%d%m%y)

./backup_results $system
./clear_results $system

if $comment ; then
	echo -e "$comment_data" > results_all/"$system"/comment.txt
fi

cd tests

tests=$(ls)

if $quiet ; then
	out_dev=null
else
	out_dev=stdout
fi

for test in $tests; do
	cd "$test" 
	echo -e "\rRunning $test"
	
	echo -e "\r\tNo CPU stress"
	if $single_core ; then
		sudo taskset -c 0 ./run_test $now_date false &> /dev/"$out_dev"
	else
		./run_test $now_date false &> /dev/"$out_dev"
	fi

	cp results/no_stress_"$now_date"/* ../../results_all/"$system"/no_stress/"$test"/.
	sudo rm -rf results/no_stress_"$now_date"

	echo -e "\r\tCPU stress"
	if $single_core ; then
		sudo taskset -c 0 ./run_test $now_date true &> /dev/"$out_dev"
	else
		./run_test $now_date true &> /dev/"$out_dev"
	fi

	cp results/stress_"$now_date"/* ../../results_all/"$system"/stress/"$test"/.
	sudo rm -rf results/stress_"$now_date"
	
	cd ../
done

cd ../

echo -e "\rOK!"
